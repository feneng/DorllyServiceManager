@using DorllyService.Common;
@using DorllyService.Domain;
@model PageInfo<PropertyValue>
@{ ViewBag.Title = Model.data != null && Model.data.Any() ? Model.data.FirstOrDefault().Property.Name : "设置属性值";}

@section styles{
    <environment include="Development">
        <link href="~/Admin/css/dataTables.bootstrap.css" rel="stylesheet" />
    </environment>
    <environment exclude="Development">
        <link href="~/Admin/css/dataTables.bootstrap.css" rel="stylesheet" />
    </environment>
}

<div class="row">
    <div class="col-xs-12 col-md-12">
        <div class="widget">
            <div class="widget-header ">
                <span class="widget-caption">@ViewBag.Title</span>
                <div class="widget-buttons">
                    <a href="#" data-toggle="maximize">
                        <i class="fa fa-expand"></i>
                    </a>
                    <a href="#" data-toggle="collapse">
                        <i class="fa fa-minus"></i>
                    </a>
                    <a href="#" data-toggle="dispose">
                        <i class="fa fa-times"></i>
                    </a>
                </div>
            </div>
            <div class="widget-body">
                <div class="table-toolbar">
                    <a class="btn btn-success create">
                        添加属性值
                    </a>
                </div>

                <table class="table table-striped table-hover table-bordered" id="editabledatatable">
                    <thead>
                        <tr role="row">
                            <th>
                                序号
                            </th>
                            <th>
                                @Html.DisplayNameFor(p => p.data.FirstOrDefault().Code)
                            </th>
                            <th>
                                @Html.DisplayNameFor(p => p.data.FirstOrDefault().Name)
                            </th>
                            <th>
                                @Html.DisplayNameFor(p => p.data.FirstOrDefault().StateName)
                            </th>
                            <th>
                                操作
                            </th>
                        </tr>
                    </thead>

                    <tbody>
                        @if (Model.data == null || !Model.data.Any())
                        {
                            <tr>
                                <td colspan="4">暂无数据</td>
                            </tr>
                        }
                        else
                        {
                            for (var i = 0; i < Model.data.Count; i++)
                            {
                                <tr>
                                    <td>@(i+1)</td>
                                    <td>@Html.DisplayFor(p => Model.data[i].Code)</td>
                                    <td>@Html.DisplayFor(p => Model.data[i].Name)</td>

                                    <td>@Html.DisplayFor(p => Model.data[i].StateName)</td>
                                    <td>
                                        <a class="btn btn-info btn-xs" onclick="Index.AllocatePropertyValue(@Model.data[i].Id)"><i class="fa fa-edit"></i> 设置属性值</a>
                                        <a class="btn btn-primary btn-xs" onclick="Index.Edit(@Model.data[i].Id)"><i class="fa fa-edit"></i> 编辑</a>
                                        <a class="btn btn-danger btn-xs" onclick="Index.Delete(@Model.data[i].Id)"><i class="fa fa-edit"></i> 删除</a>
                                        <a class="btn btn-warning btn-xs" onclick="Index.Deactivate(@Model.data[i].Id)"><i class="fa fa-edit"></i> 停用</a>
                                    </td>
                                </tr>
                            }
                        }
                    </tbody>
                </table>
            </div>
        </div>
    </div>
</div>

@section scripts{
    <script>
        var Index = (function ($) {
            var config = {
                oTable: null,
            };

            var PageTable = (function () {
                return {
                    Init: function () {
                        config.oTable = $('#editabledatatable').dataTable({
                            //"sDom": "Tflt<'row DTTTFooter'<'col-sm-6'i><'col-sm-6'p>>",
                            //"oTableTools": {
                            //    "aButtons": [
                            //        "print"
                            //    ],
                            //    "sSwfPath": "/admin/js/datatable/assets/swf/copy_csv_xls_pdf.swf"
                            //},
                            //"language": {
                            //    "search": "",
                            //    "sLengthMenu": "_MENU_",
                            //},
                            "bFilter": false,
                            "bPaginate": false,
                            "serverSide": true,
                            "ajax": {
                                "url": '@Url.Action("Search","ServiceProperty")',
                                "type": "post",
                                "data": function (data) {
                                    data.pageIndex = (data.start / data.length) + 1;
                                    data.length = $('#editabledatatable_length select').val();
                                },
                                "dataSrc": function (pageInfo) {
                                    $('#editabledatatable_length select').val(pageInfo.length);
                                    return pageInfo.data;
                                }
                            },
                            "columns": [
                                { "defaultContent": "", "orderable": false, "bSearchable": false },
                                { "data": "code", "bSearchable": true, "width": "5%", },
                                { "data": "name", "bSearchable": false, "width": "10%", },
                                { "data": "typeName", "bSearchable": false, "width": "10%", },
                                { "data": "inputTypeName", "bSearchable": false, "width": "10%", },
                                { "data": "notNull", "bSearchable": false },
                                { "data": "categories", "bSearchable": false },
                                { "data": "stateName", "bSearchable": false, "width": "5%", },
                                { "defaultContent": "", "orderable": false, "bSearchable": false },
                            ],
                            "columnDefs": [
                                {
                                    "targets": [0],
                                    "data": null,
                                    "width": "5%",
                                },
                                {
                                    "targets": [5],
                                    "data": "notNull",
                                    "render": function (data, type, full) {
                                        return !!data ? "是" : "否";
                                    },
                                    "width": "5%",
                                },
                                {
                                    "targets": [6],
                                    "data": "categories",
                                    "render": function (data, type, full) {
                                        var content = "";
                                        if (full.type !== 2)
                                            return content;
                                        $.each(data, function (i, o) {
                                            content += '<span class="label label-' + (o.category.status ? "primary" : "default") + '">' + o.category.name + '</span>&nbsp;';
                                        });
                                        return content;
                                    },
                                    "width": "15%",
                                },
                                {
                                    "targets": [8],
                                    "data": "id",
                                    "render": function (data, type, full) {
                                        var tags = "";
                                        $.each(full.categories, function (i, o) {
                                            if (o.category.status && o.category.parent.status && o.category.parent.parent.status)
                                                tags += o.categoryId;
                                            if (i != full.categories.length - 1)
                                                tags += "_";
                                        });
                                        var setCategoriesBtn = full.type !== 2 ? "" : '<a class="btn btn-palegreen btn-xs" onclick="Index.EditPropertyCategory(' + data + ',\'' + tags + '\')"><i class="fa fa-wrench"></i> 设置关联分类</a>&nbsp;';
                                        var setPropertyValueBtn = full.inputType === 1 ? "" : '<a class="btn btn-info btn-xs" onclick="Index.AllocatePropertyValue(' + data + ')"><i class="fa fa-wrench"></i> 设置属性值</a>&nbsp;';
                                        return setCategoriesBtn + setPropertyValueBtn +
                                            '<a class="btn btn-primary btn-xs" onclick="Index.Edit(' + data + ')"><i class="fa fa-edit"></i> 编辑</a>&nbsp;' +
                                            '<a class="btn btn-danger btn-xs" onclick="Index.Delete(' + data + ')"><i class="fa fa-trash-o"></i> 删除</a>&nbsp;' +
                                            '<a class="btn ' + (full.state == 1 ? "btn-warning" : "btn-success") + ' btn-xs" onclick="Index.Deactivate(' + data + ')"><i class="' + (full.state == 1 ? "fa fa-lock" : "fa fa-unlock") + '"></i> ' + (full.state == 1 ? "停用" : "启用") + '</a>&nbsp;';
                                    },
                                    "width": "25%",
                                }
                            ],
                            "sPaginationType": "bootstrap",
                            "aaSorting": [[1, 'asc']],
                            "fnDrawCallback": function () {
                                var api = this.api();
                                var startIndex = api.context[0]._iDisplayStart;
                                api.column(0).nodes().each(function (cell, i) {
                                    cell.innerHTML = startIndex + i + 1;
                                });
                            },
                        });
                    },
                    InitDialogTable: function (id) {


                    },
                };
            })();

            return {
                Init: function (setting) {
                    if (!!setting) $.extend(config, setting);
                    $('.create').on('click', Index.Create);
                    PageTable.Init();
                },
                Create: function () {
                    bootbox.dialog({
                        loadPage: true,
                        message: "@Url.Action("Create","ServiceProperty")",
                        title: "添加服务属性",
                        className: "modal-darkorange",
                        buttons: {
                            success: {
                                label: "提交",
                                className: "btn-blue",
                                callback: function () {
                                    $('#createform').submit();
                                }
                            },
                            cancel: {
                                label: "返回列表",
                                className: "btn-danger",
                            }
                        }
                    });
                },
                Edit: function (id) {
                    bootbox.dialog({
                        loadPage: true,
                        message: '@Url.Action("Edit","ServiceProperty")/' + id,
                        title: "编辑服务属性",
                        className: "modal-darkorange",
                        buttons: {
                            success: {
                                label: "提交",
                                className: "btn-blue",
                                callback: function () {
                                    $('#editform').submit();
                                }
                            },
                            cancel: {
                                label: "取消",
                                className: "btn-danger",
                            }
                        }
                    });
                },
                Details: function (id) {
                    bootbox.dialog({
                        loadPage: true,
                        message: '@Url.Action("Details","ServiceProperty")/' + id,
                        title: "服务属性详细信息",
                        className: "modal-darkorange",
                        buttons: {
                            cancel: {
                                label: "关闭",
                                className: "btn-danger",
                            }
                        }
                    });
                },
                Delete: function (id) {
                    bootbox.dialog({
                        loadPage: true,
                        message: '@Url.Action("Delete", "ServiceProperty")/' + id,
                        title: "删除服务属性",
                        className: "modal-darkorange",
                        buttons: {
                            success: {
                                label: "确认删除",
                                className: "btn-danger",
                                callback: function () {
                                    $('#deleteform').submit();
                                }
                            },
                            cancel: {
                                label: "取消",
                                className: "btn-default",
                            }
                        }
                    });
                },
                Deactivate: function (id) {
                    bootbox.confirm("确认切换此服务属性状态？", function (result) {
                        if (result) {
                            $.ajax({
                                url: '@Url.Action("Deactivate", "ServiceProperty")/' + id,
                                success: function (operate) {
                                    if (operate.state) {
                                        bootbox.alert('服务属性状态已切换！');
                                        config.oTable.fnDraw();
                                    }
                                }
                            });
                        }
                    });
                },
                EditPropertyCategory: function (id, tags) {
                    bootbox.dialog({
                        message: $("#editPropertyCategoryModal").html(),
                        title: "设置关联类别",
                        className: "modal-darkorange",
                        buttons: {
                            success: {
                                label: "设置",
                                className: "btn-blue",
                                callback: function () {
                                    var selectItems = $(".editPropertyCategories").select2('val');
                                    $.ajax({
                                        url: '@Url.Action("EditPropertyCategory", "ServiceProperty")',
                                        type: 'post',
                                        dataType: 'json',
                                        data: { propertyId: id, tags: selectItems },
                                        success: function (operate) {
                                            if (operate.state) {
                                                bootbox.alert('关联分类设置成功！');
                                                config.oTable.fnDraw();
                                            }
                                        }
                                    });
                                }
                            },
                            cancel: {
                                label: "取消",
                                className: "btn-default",
                            }
                        }
                    });

                    var select2Setting = {
                        placeholder: "选择分类",
                        allowClear: true,
                    };
                    if (!!tags) {
                        var selectedTags = tags.split("_");
                        $(".editPropertyCategories").eq(1).val(selectedTags).select2(select2Setting);
                    }
                    else {
                        $(".editPropertyCategories").eq(1).select2(select2Setting);
                    }

                },
            }
        })(jQuery);
     Index.Init();</script>
}